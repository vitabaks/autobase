global
    maxconn {{ haproxy_maxconn.global }}
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon

defaults
    mode               tcp
    log                global
    option             tcplog
{% if haproxy_log_format is defined %}
    log-format         '{{ haproxy_log_format }}'
{% endif %}
    retries            2
    timeout queue      5s
    timeout connect    5s
    timeout client     {{ haproxy_timeout.client }}
    timeout server     {{ haproxy_timeout.server }}
    timeout check      15s

listen stats
    mode http
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.stats }}
    stats enable
    stats uri /

listen master
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.master }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.master }}
{% endif %}
    maxconn {{ haproxy_maxconn.master }}
    option httpchk OPTIONS /primary
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 4 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split (index (split $data.conn_url ":") 1) "/") 2) "@" "/" -1)}}:{% endraw %}{{ pgbouncer_listen_port }}{% raw %} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

{% if pgbouncer_install|bool and haproxy_listen_port.master_direct is defined %}
listen master_direct
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.master_direct }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.master_direct }}
{% endif %}
    maxconn {{ haproxy_maxconn.master }}
    option httpchk OPTIONS /primary
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 4 on-marked-down shutdown-sessions
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

listen replicas
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /replica?lag={{ patroni_maximum_lag_on_replica }}{{ '&' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /replica?lag={{ patroni_maximum_lag_on_replica }}
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split (index (split $data.conn_url ":") 1) "/") 2) "@" "/" -1)}}:{% endraw %}{{ pgbouncer_listen_port }}{% raw %} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

{% if pgbouncer_install|bool and haproxy_listen_port.replicas_direct is defined %}
listen replicas_direct
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas_direct }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas_direct }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /replica?lag={{ patroni_maximum_lag_on_replica }}{{ '&' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /replica?lag={{ patroni_maximum_lag_on_replica }}
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

listen replicas_sync
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas_sync }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas_sync }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /sync{{ '?' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /sync
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split (index (split $data.conn_url ":") 1) "/") 2) "@" "/" -1)}}:{% endraw %}{{ pgbouncer_listen_port }}{% raw %} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

{% if pgbouncer_install|bool and haproxy_listen_port.replicas_sync_direct is defined %}
listen replicas_sync_direct
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas_sync_direct }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas_sync_direct }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /sync{{ '?' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /sync
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

listen replicas_async
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas_async }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas_async }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /async?lag={{ patroni_maximum_lag_on_replica }}{{ '&' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /async?lag={{ patroni_maximum_lag_on_replica }}
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% if pgbouncer_install|bool %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split (index (split $data.conn_url ":") 1) "/") 2) "@" "/" -1)}}:{% endraw %}{{ pgbouncer_listen_port }}{% raw %} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}
{% if ( pgbouncer_install is not defined ) or ( not pgbouncer_install|bool ) %}
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}

{% if pgbouncer_install|bool and haproxy_listen_port.replicas_async_direct is defined %}
listen replicas_async_direct
{% if cluster_vip is defined and cluster_vip | length > 0 %}
    bind {{ cluster_vip }}:{{ haproxy_listen_port.replicas_async_direct }}
{% else %}
    bind {{ inventory_hostname }}:{{ haproxy_listen_port.replicas_async_direct }}
{% endif %}
    maxconn {{ haproxy_maxconn.replica }}
    {% if balancer_tags | default('') | length > 0 %}
    option httpchk OPTIONS /async?lag={{ patroni_maximum_lag_on_replica }}{{ '&' + balancer_tags.split(',') | map('trim') | map('regex_replace', '([^=]+)=(.*)', 'tag_\\1=\\2') | join('&') }}
    {% else %}
    option httpchk OPTIONS /async?lag={{ patroni_maximum_lag_on_replica }}
    {% endif %}
    balance roundrobin
    http-check expect status 200
    default-server inter 3s fastinter 1s fall 3 rise 2 on-marked-down shutdown-sessions
{% raw %}{{range gets "/members/*"}} server {{base .Key}} {{$data := json .Value}}{{base (replace (index (split $data.conn_url "/") 2) "@" "/" -1)}} check port {{index (split (index (split $data.api_url "/") 2) ":") 1}}
{{end}}{% endraw %}
{% endif %}


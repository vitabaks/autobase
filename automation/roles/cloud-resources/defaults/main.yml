# yamllint disable rule:line-length
---

cloud_provider: "{{ provision | default('') }}" # Specifies the Cloud provider for server creation. Available options: 'aws', 'gcp', 'azure', 'digitalocean', 'hetzner'.
state: present  # Set to 'present' to create a server, 'absent' to delete.

server_count: "{{ servers_count | default(3) }}"  # Number of servers in the cluster.
server_name: "{{ patroni_cluster_name }}-pgnode"  # (optional) If not provided, a name will be auto-generated. Servers will be automatically named with suffixes 01, 02, 03, etc.
server_type: ""  # (required) Server type.
server_image: ""  # (required) OS image for the server. For Azure, use variables 'azure_vm_image_offer', 'azure_vm_image_publisher', 'azure_vm_image_sku', 'azure_vm_image_version' instead of variable 'server_image'
server_location: ""  # (required) Server location or region.
server_network: ""  # (optional) If provided, the server will be added to this network (needs to be created beforehand).
server_spot: false  # Spot instance. Applicable for AWS, GCP, Azure.

volume_type: ""  # Volume type. Defaults: 'gp3' for AWS, 'pd-ssd' for GCP, 'StandardSSD_LRS' for Azure.
volume_size: 100  # Storage size for the data directory (in gigabytes).
system_volume_type: ""  # System volume type. Defaults: 'gp3' for AWS, 'pd-ssd' for GCP, 'StandardSSD_LRS' for Azure.
system_volume_size: 100  # System volume size (in gigabytes). Applicable for AWS, GCP, Azure.

ssh_key_name: ""  # Name of the SSH key to be added to the server.
# Note: If not provided, all cloud available SSH keys will be added (applicable to DigitalOcean, Hetzner).
ssh_key_content: ""  # (optional) If provided, the public key content will be added to the cloud (directly to the server for GCP).

# Firewall / Security Group
cloud_firewall: true  # Specify 'false' if you don't want to configure Firewall rules, or want to manage them yourself.

ssh_public_access: true  # Allow public ssh access (required for deployment from the public network).
ssh_public_allowed_ips: ""  # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.
netdata_public_access: true  # Allow access to the Netdata monitoring from the public network (if 'netdata_install' is 'true').
netdata_public_allowed_ips: ""  # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.
database_public_access: false  # Allow access to the database from the public network.
database_public_allowed_ips: ""  # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.

# Load balancer
cloud_load_balancer: true  # Create a Load Balancer in the Cloud.

# Backups (if 'pgbackrest_install' or 'wal_g_install' is 'true')
aws_s3_bucket_create: true  # if 'cloud_provider=aws'
aws_s3_bucket_name: "{{ patroni_cluster_name }}-backup"  # Name of the S3 bucket. Bucket naming rules: https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html
aws_s3_bucket_region: "{{ server_location }}"  # The AWS region to use.
aws_s3_bucket_object_lock_enabled: false  # Whether S3 Object Lock to be enabled.
aws_s3_bucket_encryption: "AES256"  # Describes the default server-side encryption to apply to new objects in the bucket. Choices: "AES256", "aws:kms"
aws_s3_bucket_block_public_acls: true  # Sets BlockPublicAcls value.
aws_s3_bucket_ignore_public_acls: true  # Sets IgnorePublicAcls value.
aws_s3_bucket_absent: false  # Allow to delete S3 bucket when deleting a cluster servers using the 'state=absent' variable.

gcp_bucket_create: true  # if 'cloud_provider=gcp'
gcp_bucket_name: "{{ patroni_cluster_name }}-backup"  # Name of the GCS bucket.
gcp_bucket_storage_class: "MULTI_REGIONAL"  # The bucketâ€™s default storage class. Values include: MULTI_REGIONAL, REGIONAL, STANDARD, NEARLINE, COLDLINE, ARCHIVE, DURABLE_REDUCED_AVAILABILITY.
gcp_bucket_default_object_acl: "projectPrivate"  # Apply a predefined set of default object access controls to this bucket.
gcp_bucket_absent: false  # Allow to delete GCS bucket when deleting a cluster servers using the 'state=absent' variable.

azure_blob_storage_create: true  # if 'cloud_provider=azure'
azure_blob_storage_name: "{{ patroni_cluster_name }}-backup"  # Name of a blob container within the storage account.
azure_blob_storage_blob_type: "block"  # Type of blob object. Values include: block, page.
azure_blob_storage_account_name: "{{ patroni_cluster_name | lower | replace('-', '') | truncate(24, true, '') }}"  # Storage account name must be between 3 and 24 characters in length and use numbers and lower-case letters only.
azure_blob_storage_account_type: "Standard_RAGRS"  # Type of storage account. Values include: Standard_LRS, Standard_GRS, Standard_RAGRS, Standard_ZRS, Standard_RAGZRS, Standard_GZRS, Premium_LRS, Premium_ZRS.
azure_blob_storage_account_kind: "BlobStorage"  # The kind of storage. Values include: Storage, StorageV2, BlobStorage, BlockBlobStorage, FileStorage.
azure_blob_storage_account_access_tier: "Hot"  # The access tier for this storage account. Required when kind=BlobStorage.
azure_blob_storage_account_public_network_access: "Enabled"  # Allow public network access to Storage Account to create Blob Storage container.
azure_blob_storage_account_allow_blob_public_access: false  # Disallow public anonymous access.
azure_blob_storage_absent: false  # Allow to delete Azure Blob Storage when deleting a cluster servers using the 'state=absent' variable.

digital_ocean_spaces_create: true  # if 'cloud_provider=digitalocean'
digital_ocean_spaces_name: "{{ patroni_cluster_name }}-backup"  # Name of the Spaces Object Storage (S3 bucket).
digital_ocean_spaces_region: "nyc3"  # The region to create the Space in.
digital_ocean_spaces_absent: false  # Allow to delete Spaces Object Storage when deleting a cluster servers using the 'state=absent' variable.

...

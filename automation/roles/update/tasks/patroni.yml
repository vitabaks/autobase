---
# patroni_installation_method: "pip"
- block:
    - name: Install the latest version of Patroni
      ansible.builtin.pip:
        name: patroni
        state: latest
        executable: pip3
        extra_args: "--trusted-host=pypi.python.org --trusted-host=pypi.org --trusted-host=files.pythonhosted.org"
        umask: "0022"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/local/bin:/usr/bin"
        PIP_BREAK_SYSTEM_PACKAGES: "1"
      register: update_patroni_package_pip
  ignore_errors: true
  environment: "{{ proxy_env | default({}) }}"
  when: installation_method == "packages" and patroni_installation_method == "pip"

# patroni_installation_method: "rpm/deb"
- block:
    # Debian
    - name: Install the latest version of Patroni packages
      ansible.builtin.package:
        name: "{{ patroni_packages | flatten }}"
        state: latest
      register: update_patroni_package_debian
      until: update_patroni_package_debian is success
      delay: 5
      retries: 3
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length < 1

    # RedHat
    - name: Install the latest version of Patroni packages
      ansible.builtin.package:
        name: "{{ patroni_packages | flatten }}"
        state: latest
      register: update_patroni_package_rhel
      until: update_patroni_package_rhel is success
      delay: 5
      retries: 3
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length < 1

    # when patroni_deb_package_repo or patroni_rpm_package_repo URL is defined
    # Debian
    - name: Download Patroni deb package
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop: "{{ patroni_deb_package_repo | list }}"
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length > 0

    - name: Install Patroni from deb package
      ansible.builtin.apt:
        force_apt_get: true
        deb: "/tmp/{{ item }}"
        state: present
      loop: "{{ patroni_deb_package_repo | map('basename') | list }}"
      register: update_patroni_package_deb
      until: update_patroni_package_deb is success
      delay: 5
      retries: 3
      when: ansible_os_family == "Debian" and patroni_deb_package_repo | length > 0

    # RedHat
    - name: Download Patroni rpm package
      ansible.builtin.get_url:
        url: "{{ item }}"
        dest: /tmp/
        timeout: 60
        validate_certs: false
      loop: "{{ patroni_rpm_package_repo | list }}"
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length > 0

    - name: Install Patroni from rpm package
      ansible.builtin.package:
        name: "/tmp/{{ item }}"
        state: present
      loop: "{{ patroni_rpm_package_repo | map('basename') | list }}"
      register: update_patroni_package_rpm
      until: update_patroni_package_rpm is success
      delay: 5
      retries: 3
      when: ansible_os_family == "RedHat" and patroni_rpm_package_repo | length > 0
  ignore_errors: true
  environment: "{{ proxy_env | default({}) }}"
  when:
    - installation_method == "packages"
    - (patroni_installation_method == "rpm" or patroni_installation_method == "deb")

# Set flag if any update failed
- name: "Set variable: update_patroni_failed"
  ansible.builtin.set_fact:
    update_patroni_failed: true
  when: >
    (update_patroni_package_pip is defined and update_patroni_package_pip is failed) or
    (update_patroni_package_debian is defined and update_patroni_package_debian is failed) or
    (update_patroni_package_rhel is defined and update_patroni_package_rhel is failed) or
    (update_patroni_package_deb is defined and update_patroni_package_deb is failed) or
    (update_patroni_package_rpm is defined and update_patroni_package_rpm is failed)

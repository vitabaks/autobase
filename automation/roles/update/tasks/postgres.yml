---
- name: Update dnf cache
  ansible.builtin.shell: dnf clean all && dnf -y makecache
  args:
    executable: /bin/bash
  ignore_errors: true
  when: ansible_os_family == "RedHat" and not (skip_dnf_makecache | default(false) | bool)

- name: Update apt cache
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  register: apt_status
  until: apt_status is success
  delay: 5
  retries: 3
  ignore_errors: true
  when: ansible_os_family == "Debian"

- name: Install the latest version of PostgreSQL packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: latest
  loop: "{{ postgresql_packages }}"
  register: update_postgres_package
  until: update_postgres_package is success
  delay: 5
  retries: 3
  ignore_errors: true

# Set flag if any update failed
- name: "Set variable: update_postgres_failed"
  ansible.builtin.set_fact:
    update_postgres_failed: true
  when: update_postgres_package is failed

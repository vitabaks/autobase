# yamllint disable rule:line-length
---
cloud_provider: "{{ provision | default('') }}" # Specifies the Cloud provider for server creation. Available options: 'aws', 'gcp', 'azure', 'digitalocean', 'hetzner'.
state: present # Set to 'present' to create a server, 'absent' to delete.

server_count: "{{ servers_count | default(3) }}" # Number of servers in the cluster.
server_name: "{{ patroni_cluster_name }}-pgnode" # (optional) If not provided, a name will be auto-generated. Servers will be automatically named with suffixes 01, 02, 03, etc.
server_type: "" # (required) Server type.
server_image: "" # (required) OS image for the server. For Azure, use variables 'azure_vm_image_offer', 'azure_vm_image_publisher', 'azure_vm_image_sku', 'azure_vm_image_version' instead of variable 'server_image'
server_location: "" # (required) Server location or region.
server_network: "" # (optional) If provided, the server will be added to this network (needs to be created beforehand).
server_spot: false # Spot instance. Applicable for AWS, GCP, Azure.

volume_type: "" # Volume type. Defaults: 'gp3' for AWS, 'pd-ssd' for GCP, 'StandardSSD_LRS' for Azure.
volume_size: 100 # Storage size for the data directory (in gigabytes).
system_volume_type: "" # System volume type. Defaults: 'gp3' for AWS, 'pd-ssd' for GCP, 'StandardSSD_LRS' for Azure.
system_volume_size: 100 # System volume size (in gigabytes). Applicable for AWS, GCP, Azure.

ssh_key_name: "" # Name of the SSH key to be added to the server.
# Note: If not provided, all cloud available SSH keys will be added (applicable to DigitalOcean, Hetzner).
ssh_key_content: "" # (optional) If provided, the public key content will be added to the cloud (directly to the server for GCP).

# Firewall / Security Group
cloud_firewall: true # Specify 'false' if you don't want to configure Firewall rules, or want to manage them yourself.

ssh_public_access: true # Allow public ssh access (required for deployment from the public network).
ssh_public_allowed_ips: "" # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.
netdata_public_access: true # Allow access to the Netdata monitoring from the public network (if 'netdata_install' is 'true').
netdata_public_allowed_ips: "" # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.
database_public_access: false # Allow access to the database from the public network.
database_public_allowed_ips: "" # (comma-separated list of IP addresses in CIDR format) If empty, then public access is allowed for any IP address.

# Load balancer
cloud_load_balancer: true # Create a Load Balancer in the Cloud.

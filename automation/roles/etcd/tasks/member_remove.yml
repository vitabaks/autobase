---
# Remove node from etcd cluster (remove_node.yml)
- block:
    - name: Build etcd endpoints for existing cluster members
      run_once: true # noqa run-once
      ansible.builtin.set_fact:
        etcd_endpoints: >-
          {% for host in (groups['etcd_cluster'] | difference([target_node])) -%}
          {{ patroni_etcd_protocol | default('http', true) }}://
          {{- hostvars[host]['etcd_bind_address'] | default(hostvars[host]['bind_address'], true) }}:2379
          {%- if not loop.last %},{% endif -%}
          {% endfor %}

    - name: Get etcd cluster member list
      run_once: true # noqa run-once
      ansible.builtin.command: >-
        /usr/local/bin/etcdctl member list
        --write-out=json
        --endpoints={{ etcd_endpoints }}
        {% if etcd_tls_enable | default(false) | bool %}
        --cacert={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_ca_crt | default('ca.crt') }}
        --cert={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_server_crt | default('server.crt') }}
        --key={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_server_key | default('server.key') }}
        {% endif %}
      environment:
        ETCDCTL_API: "3"
      register: etcd_members_json
      changed_when: false

    - name: Extract target node etcd member ID
      run_once: true # noqa run-once
      ansible.builtin.set_fact:
        target_etcd_member_id_dec: >-
          {{
            ((etcd_members_json.stdout | default('{}')) | from_json).members
            | selectattr('name', 'equalto', hostvars[target_node].ansible_hostname)
            | map(attribute='ID')
            | first | default(0) | int
          }}

    - name: Convert member ID to hex
      run_once: true # noqa run-once
      ansible.builtin.set_fact:
        target_etcd_member_id: "{{ '%x' % (target_etcd_member_id_dec | int) if (target_etcd_member_id_dec | int) > 0 else '' }}"

    - name: Debug target member info
      run_once: true # noqa run-once
      ansible.builtin.debug:
        msg:
          target_hostname: "{{ hostvars[target_node].ansible_hostname }}"
          id_dec: "{{ target_etcd_member_id_dec }}"
          id_hex: "{{ target_etcd_member_id }}"
          members: "{{ (etcd_members_json.stdout | from_json).members | map(attribute='name') | list }}"

    - name: Remove node from etcd cluster
      run_once: true # noqa run-once
      ansible.builtin.command: >-
        /usr/local/bin/etcdctl member remove {{ target_etcd_member_id }}
        --endpoints={{ etcd_endpoints }}
        {% if etcd_tls_enable | default(false) | bool %}
        --cacert={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_ca_crt | default('ca.crt') }}
        --cert={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_server_crt | default('server.crt') }}
        --key={{ etcd_tls_dir | default('/etc/etcd/tls') }}/{{ etcd_tls_server_key | default('server.key') }}
        {% endif %}
      environment:
        ETCDCTL_API: "3"
      when: target_etcd_member_id | length > 0
  when: inventory_hostname != target_node | default('')
  tags: etcd, etcd_member_remove

- block:
    - name: Stop and disable etcd service on target node
      ansible.builtin.service:
        name: etcd
        state: stopped
        enabled: false

    - name: Delete etcd content on target node
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ etcd_data_dir | default('/var/lib/etcd') }}"
        - "{{ etcd_conf_dir | default('/etc/etcd') }}"
      when: remove_etcd_data | default(true) | bool
  when: inventory_hostname == target_node | default('')
  tags: etcd, etcd_member_remove

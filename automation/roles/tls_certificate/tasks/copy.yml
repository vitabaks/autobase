---
- name: "Fetch TLS certificate, key and CA from {{ inventory_hostname }}"
  ansible.builtin.slurp:
    src: "{{ fetch_tls_dir | default(tls_dir | default('/etc/tls')) }}/{{ item }}"
  register: tls_files_raw
  loop:
    - "{{ fetch_tls_privatekey | default(tls_privatekey | default('server.key')) }}"
    - "{{ fetch_tls_cert | default(tls_cert | default('server.crt')) }}"
    - "{{ fetch_tls_ca_cert | default(tls_ca_cert | default('ca.crt')) }}"
  when: inventory_hostname == (groups[tls_group_name | default('master')][0])
  tags: tls, tls_cert_copy

- name: "Set variable: tls_files"
  ansible.builtin.set_fact:
    tls_files:
      server_key: "{{ tls_files_raw.results[0].content }}"
      server_crt: "{{ tls_files_raw.results[1].content }}"
      ca_crt: "{{ tls_files_raw.results[2].content }}"
  when: inventory_hostname == (groups[tls_group_name | default('master')][0])
  tags: tls, tls_cert_copy

- name: Create directory {{ copy_tls_dir | default(tls_dir | default('/etc/tls')) }}
  ansible.builtin.file:
    path: "{{ copy_tls_dir | default(tls_dir | default('/etc/tls')) }}"
    state: directory
    owner: "{{ copy_tls_owner | default(tls_owner | default('postgres')) }}"
    group: "{{ copy_tls_owner | default(tls_owner | default('postgres')) }}"
    mode: "0755"
  tags: tls, tls_cert_copy

- name: Copy TLS certificate, key and CA to all nodes
  ansible.builtin.copy:
    content: "{{ (hostvars[groups[tls_group_name | default('master')][0]].tls_files[item.key] | b64decode) }}"
    dest: "{{ copy_tls_dir | default(tls_dir | default('/etc/tls')) }}/{{ item.filename }}"
    owner: "{{ copy_tls_owner | default(tls_owner | default('postgres')) }}"
    group: "{{ copy_tls_owner | default(tls_owner | default('postgres')) }}"
    mode: "{{ item.mode }}"
  loop:
    - { key: 'server_crt', filename: "{{ copy_tls_cert | default(tls_cert | default('server.crt')) }}", mode: "0644" }
    - { key: 'ca_crt', filename: "{{ copy_tls_ca_cert | default(tls_ca_cert | default('ca.crt')) }}", mode: "0644" }
    - { key: 'server_key', filename: "{{ copy_tls_privatekey | default(tls_privatekey | default('server.key')) }}", mode: "0400" }
  loop_control:
    label: "{{ copy_tls_dir | default(tls_dir | default('/etc/tls')) }}/{{ item.filename }}"
  tags: tls, tls_cert_copy

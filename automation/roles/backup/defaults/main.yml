---
# Backups (if 'pgbackrest_install' or 'wal_g_install' is 'true')
aws_s3_bucket_create: true # if 'cloud_provider=aws'
aws_s3_bucket_name: "{{ patroni_cluster_name }}-backup" # Name of the S3 bucket.
aws_s3_bucket_region: "{{ server_location }}" # The AWS region to use.
aws_s3_bucket_object_lock_enabled: false # Whether S3 Object Lock to be enabled.
aws_s3_bucket_encryption: "AES256" # Describes the default server-side encryption to apply to new objects in the bucket. Choices: "AES256", "aws:kms"
aws_s3_bucket_block_public_acls: true # Sets BlockPublicAcls value.
aws_s3_bucket_ignore_public_acls: true # Sets IgnorePublicAcls value.
aws_s3_bucket_absent: false # Allow to delete S3 bucket when deleting a cluster servers using the 'state=absent' variable.

gcp_bucket_create: true # if 'cloud_provider=gcp'
gcp_bucket_name: "{{ patroni_cluster_name }}-backup" # Name of the GCS bucket.
gcp_bucket_storage_class: "MULTI_REGIONAL" # The bucketâ€™s default storage class.
gcp_bucket_default_object_acl: "projectPrivate" # Apply a predefined set of default object access controls to this bucket.
gcp_bucket_absent: false # Allow to delete GCS bucket when deleting a cluster servers using the 'state=absent' variable.

azure_blob_storage_create: true # if 'cloud_provider=azure'
azure_blob_storage_name: "{{ patroni_cluster_name }}-backup" # Name of a blob container within the storage account.
azure_blob_storage_blob_type: "block" # Type of blob object. Values include: block, page.
azure_blob_storage_account_name: "{{ patroni_cluster_name | lower | replace('-', '') | truncate(24, true, '') }}"
azure_blob_storage_account_type: "Standard_RAGRS" # Type of storage account.
azure_blob_storage_account_kind: "BlobStorage" # The kind of storage. Values include: Storage, StorageV2, BlobStorage, BlockBlobStorage, FileStorage.
azure_blob_storage_account_access_tier: "Hot" # The access tier for this storage account. Required when kind=BlobStorage.
azure_blob_storage_account_public_network_access: "Enabled" # Allow public network access to Storage Account to create Blob Storage container.
azure_blob_storage_account_allow_blob_public_access: false # Disallow public anonymous access.
azure_blob_storage_absent: false # Allow to delete Azure Blob Storage when deleting a cluster servers using the 'state=absent' variable.

digital_ocean_spaces_create: true # if 'cloud_provider=digitalocean'
digital_ocean_spaces_name: "{{ patroni_cluster_name }}-backup" # Name of the Spaces Object Storage (S3 bucket).
digital_ocean_spaces_region: "nyc3" # The region to create the Space in.
digital_ocean_spaces_absent: false # Allow to delete Spaces Object Storage when deleting a cluster servers using the 'state=absent' variable.

hetzner_object_storage_create: true # if 'cloud_provider=hetzner'
hetzner_object_storage_name: "{{ patroni_cluster_name }}-backup" # Name of the Object Storage (S3 bucket).
hetzner_object_storage_region: "{{ server_location }}" # The region where the Object Storage (S3 bucket) will be created.
hetzner_object_storage_endpoint: "https://{{ hetzner_object_storage_region }}.your-objectstorage.com"
hetzner_object_storage_access_key: "" # (required) Object Storage ACCESS KEY
hetzner_object_storage_secret_key: "" # (required) Object Storage SECRET KEY
hetzner_object_storage_absent: false # Allow to delete Object Storage when deleting a cluster servers using the 'state=absent' variable.

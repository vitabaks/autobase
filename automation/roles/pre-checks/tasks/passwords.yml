---
# Generate passwords (if not defined)
- block:
    - name: Generate the missing passwords
      ansible.builtin.set_fact:
        "{{ item }}": "{{ lookup('password', '/dev/null chars=ascii_letters,digits length=32') }}"
      loop:
        - patroni_superuser_password
        - patroni_replication_password
        - patroni_restapi_password
        - pgbouncer_auth_password
      when:
        - inventory_hostname == groups['master'][0]  # generate on master host
        - vars[item] | default('') | length < 1      # if the password is not set

    - name: Set password variables for all hosts
      ansible.builtin.set_fact:
        patroni_superuser_password: "{{ hostvars[groups['master'][0]]['patroni_superuser_password'] }}"
        patroni_replication_password: "{{ hostvars[groups['master'][0]]['patroni_replication_password'] }}"
        patroni_restapi_password: "{{ hostvars[groups['master'][0]]['patroni_restapi_password'] }}"
        pgbouncer_auth_password: "{{ hostvars[groups['master'][0]]['pgbouncer_auth_password'] }}"
  when: not (postgresql_cluster_maintenance | default(false) | bool) # exclude for config_pgcluster.yml and add_pgnode.yml

# Get current passwords (if not defined) - for config_pgcluster.yml and add_pgnode.yml
- block:
    - name: Get patroni superuser password
      ansible.builtin.shell: |
        set -o pipefail;
        grep -A10 "authentication:" /etc/patroni/patroni.yml | \
        grep -A3 "superuser" | grep "password:" | awk '{ print $2 }' | tail -n 1
      args:
        executable: /bin/bash
      run_once: true
      delegate_to: "{{ groups['master'][0] }}"
      register: superuser_password_result
      changed_when: false  # This tells Ansible that this task doesn't change anything
      when: patroni_superuser_password | default('') | length < 1

    - name: Get patroni replication user password
      ansible.builtin.shell: |
        set -o pipefail;
        grep -A10 "authentication:" /etc/patroni/patroni.yml | \
        grep -A3 "replication" | grep "password:" | awk '{ print $2 }' | tail -n 1
      args:
        executable: /bin/bash
      run_once: true
      delegate_to: "{{ groups['master'][0] }}"
      register: replication_password_result
      changed_when: false  # This tells Ansible that this task doesn't change anything
      when: patroni_replication_password | default('') | length < 1

    - name: Get patroni restapi password
      ansible.builtin.shell: |
        set -o pipefail;
        grep -A10 "restapi:" /etc/patroni/patroni.yml | \
        grep -A3 "authentication" | grep "password:" | awk '{ print $2 }' | tail -n 1
      args:
        executable: /bin/bash
      run_once: true
      delegate_to: "{{ groups['master'][0] }}"
      register: patroni_restapi_password_result
      changed_when: false  # This tells Ansible that this task doesn't change anything
      when: patroni_restapi_password | default('') | length < 1

    - name: "Set variable: patroni_superuser_password"
      ansible.builtin.set_fact:
        patroni_superuser_password: "{{ superuser_password_result.stdout }}"
      when: superuser_password_result.stdout is defined

    - name: "Set variable: patroni_replication_password"
      ansible.builtin.set_fact:
        patroni_replication_password: "{{ replication_password_result.stdout }}"
      when: replication_password_result.stdout is defined

    - name: "Set variable: patroni_restapi_password"
      ansible.builtin.set_fact:
        patroni_restapi_password: "{{ patroni_restapi_password_result.stdout }}"
      when: patroni_restapi_password_result.stdout is defined
  when: postgresql_cluster_maintenance | default(false) | bool

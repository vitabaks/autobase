---
- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto
  when: ansible_facts.packages is not defined
  check_mode: false

- name: Install cronie package
  ansible.builtin.dnf:
    name: cronie
    state: present
  register: package_status
  until: package_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  when:
    - ansible_os_family == "RedHat"
    - "'cronie' not in ansible_facts.packages"
  tags: wal_g_cron

- name: Install cron package
  ansible.builtin.apt:
    name: cron
    state: present
  register: apt_status
  until: apt_status is success
  delay: 5
  retries: 3
  environment: "{{ proxy_env | default({}) }}"
  when:
    - ansible_os_family == "Debian"
    - "'cron' not in ansible_facts.packages"
  tags: wal_g_cron

- name: Add WAL-G cron jobs
  ansible.builtin.cron:
    cron_file: "{{ item.file | default('') }}"
    user: "{{ item.user | default('postgres') }}"
    minute: "{{ item.minute | default('*') }}"
    hour: "{{ item.hour | default('*') }}"
    day: "{{ item.day | default('*') }}"
    month: "{{ item.month | default('*') }}"
    weekday: "{{ item.weekday | default('*') }}"
    name: "{{ item.name }}"
    disabled: "{{ item.disabled | default(False) }}"
    state: "{{ item.state | default('present') }}"
    job: "{{ item.job }}"
  loop: "{{ wal_g_cron_jobs }}"
  tags: wal_g_cron

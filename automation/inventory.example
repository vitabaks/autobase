# This is an example inventory file for Ansible to deploy a PostgreSQL HA cluster.
#
# postgresql_exists      - Set to true if PostgreSQL is already installed and running on the server.
# hostname               - Hostname to set on this server (optional). If specified, the server will be renamed to this value.
# new_node               - Set to true to add this server as a new node to an existing cluster.
# balancer_tags          - Balancer tags in "key=value" format for the /replica, /sync, /async endpoints. Must match patroni_tags.
# patroni_tags           - Patroni tags in "key=value" format, separated by commas.
# patroni_replicatefrom  - The Patroni hostname this node should replicate from (for cascading replication).
# bind_address           - The IP address cluster services should bind to on this host. Defaults to the first available private IP address.

# if dcs_exists: false and dcs_type: "etcd"
[etcd_cluster]  # recommendation: 3, or 5-7 nodes
#10.128.64.140
#10.128.64.142
#10.128.64.143

# if dcs_exists: false and dcs_type: "consul"
[consul_instances]  # recommendation: 3 or 5-7 nodes
#10.128.64.140 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1
#10.128.64.142 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1
#10.128.64.143 consul_node_role=server consul_bootstrap_expect=true consul_datacenter=dc1
#10.128.64.144 consul_node_role=client consul_datacenter=dc2
#10.128.64.145 consul_node_role=client consul_datacenter=dc2

# if with_haproxy_load_balancing: true
[balancers]
#10.128.64.140 # balancer_tags="datacenter=dc1"
#10.128.64.142 # balancer_tags="datacenter=dc1"
#10.128.64.143 # balancer_tags="datacenter=dc1"
#10.128.64.144 # balancer_tags="datacenter=dc2"
#10.128.64.145 # balancer_tags="datacenter=dc2" new_node=true

# PostgreSQL nodes
[master]
#10.128.64.140 hostname=pgnode01 postgresql_exists=false # patroni_tags="datacenter=dc1"

[replica]
#10.128.64.142 hostname=pgnode02 postgresql_exists=false # patroni_tags="datacenter=dc1"
#10.128.64.143 hostname=pgnode03 postgresql_exists=false # patroni_tags="datacenter=dc1"
#10.128.64.144 hostname=pgnode04 postgresql_exists=false # patroni_tags="datacenter=dc2" patroni_replicatefrom="pgnode03"
#10.128.64.145 hostname=pgnode04 postgresql_exists=false # patroni_tags="datacenter=dc2" new_node=true

[postgres_cluster:children]
master
replica

# if pgbackrest_install: true and "repo_host" is set (optional)
[pgbackrest]  # Dedicated Repository Host
#10.128.64.110

[pgbackrest:vars]
#ansible_user='postgres'
#ansible_ssh_pass='secretpassword'

# Connection settings
[all:vars]
ansible_connection='ssh'
ansible_ssh_port='22'
#ansible_user='root'
#ansible_ssh_pass='secretpassword'  # "sshpass" package is required for use "ansible_ssh_pass"
#ansible_ssh_private_key_file=
#ansible_python_interpreter='/usr/bin/python3'

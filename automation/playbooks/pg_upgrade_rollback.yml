---
# This playbook performs a rollback of a PostgreSQL upgrade.
# It's designed to be used when a PostgreSQL upgrade hasn't been fully completed and the new version hasn't been started.
# The rollback operation is performed by starting the Patroni cluster with the old version of PostgreSQL using the same PGDATA.
# The playbook first checks the health of the current cluster, verifies the version of PostgreSQL, and ensures the new PostgreSQL is not running.
# If these checks pass, the playbook switches back to the old PostgreSQL paths and restarts the Patroni service.

- name: "vitabaks.autobase.pg_upgrade_rollback | Rollback the PostgreSQL upgrade"
  hosts: postgres_cluster
  gather_facts: true
  any_errors_fatal: true
  tasks:
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto
      check_mode: false

    - name: Define bind_address
      ansible.builtin.include_role:
        name: vitabaks.autobase.bind_address

    - name: '[Prepare] Add host to group "primary" (in-memory inventory)'
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: primary
      # As Primary we specify the host in the 'master' group in the inventory file.
      loop: "{{ groups['master'] }}"
      changed_when: false

    - name: '[Prepare] Add hosts to group "secondary" (in-memory inventory)'
      ansible.builtin.add_host:
        name: "{{ item }}"
        groups: secondary
      # As Secondary we specify the hosts in the 'replica' group in the inventory file.
      loop: "{{ groups['replica'] | default([]) }}"
      changed_when: false
      when: "'replica' in groups and groups['replica'] | length > 0"
  tags:
    - always

- name: "Perform Rollback"
  hosts: "primary:secondary"
  gather_facts: false
  become: true
  become_user: postgres
  any_errors_fatal: true
  tasks:
    - name: Running rollback.yml
      ansible.builtin.include_role:
        name: vitabaks.autobase.upgrade
        tasks_from: rollback
  tags:
    - rollback

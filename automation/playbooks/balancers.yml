---
- name: vitabaks.autobase.balancers | Configure HAProxy load balancers
  hosts: balancers
  become: true
  become_method: sudo
  any_errors_fatal: true
  gather_facts: true
  vars:
    vip_manager_disable: false # or 'true' for disable vip-manager service (if installed)

  pre_tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: true
        cache_valid_time: 3600
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when: ansible_os_family == "Debian" and installation_method | default('packages') == "packages"

    - name: Make sure the gnupg and apt-transport-https packages are present
      ansible.builtin.apt:
        pkg:
          - gnupg
          - apt-transport-https
        state: present
      register: apt_status
      until: apt_status is success
      delay: 5
      retries: 3
      environment: "{{ proxy_env | default({}) }}"
      when: ansible_os_family == "Debian" and installation_method | default('packages') == "packages"

    - name: Build a firewall_ports_dynamic_var
      ansible.builtin.set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | default(false) | bool
      tags: firewall

    - name: Build a firewall_rules_dynamic_var
      ansible.builtin.set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | default(false) | bool
      tags: firewall

  roles:
    - role: vitabaks.autobase.firewall
      environment: "{{ proxy_env | default({}) }}"
      vars:
        firewall_allowed_tcp_ports: "{{ firewall_ports_dynamic_var | default([]) | unique }}"
        firewall_additional_rules: "{{ firewall_rules_dynamic_var | default([]) | unique }}"
      when: firewall_enabled_at_boot | default(false) | bool
      tags: firewall

    - role: vitabaks.autobase.hostname
    - role: vitabaks.autobase.resolv_conf
    - role: vitabaks.autobase.sysctl

    - role: vitabaks.autobase.haproxy

    - role: vitabaks.autobase.confd
      when: dcs_type | default('etcd') == "etcd"

    - role: vitabaks.autobase.keepalived
      when: cluster_vip is defined and cluster_vip | length > 0

  # Optional
  tasks:
    - name: Disable vip_manager
      ansible.builtin.include_role:
        name: vitabaks.autobase.vip_manager
        tasks_from: disable
      when: vip_manager_disable | default(false) | bool

// Code generated by go-swagger; DO NOT EDIT.

package secret

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostSecretsOKCode is the HTTP code returned for type PostSecretsOK
const PostSecretsOKCode int = 200

/*
PostSecretsOK OK

swagger:response postSecretsOK
*/
type PostSecretsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseSecretInfo `json:"body,omitempty"`
}

// NewPostSecretsOK creates PostSecretsOK with default headers values
func NewPostSecretsOK() *PostSecretsOK {

	return &PostSecretsOK{}
}

// WithPayload adds the payload to the post secrets o k response
func (o *PostSecretsOK) WithPayload(payload *models.ResponseSecretInfo) *PostSecretsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post secrets o k response
func (o *PostSecretsOK) SetPayload(payload *models.ResponseSecretInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSecretsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostSecretsBadRequestCode is the HTTP code returned for type PostSecretsBadRequest
const PostSecretsBadRequestCode int = 400

/*
PostSecretsBadRequest Error

swagger:response postSecretsBadRequest
*/
type PostSecretsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostSecretsBadRequest creates PostSecretsBadRequest with default headers values
func NewPostSecretsBadRequest() *PostSecretsBadRequest {

	return &PostSecretsBadRequest{}
}

// WithPayload adds the payload to the post secrets bad request response
func (o *PostSecretsBadRequest) WithPayload(payload *models.ResponseError) *PostSecretsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post secrets bad request response
func (o *PostSecretsBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostSecretsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

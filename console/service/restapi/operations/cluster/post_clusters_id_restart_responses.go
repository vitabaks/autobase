// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDRestartOKCode is the HTTP code returned for type PostClustersIDRestartOK
const PostClustersIDRestartOKCode int = 200

/*
PostClustersIDRestartOK OK

swagger:response postClustersIdRestartOK
*/
type PostClustersIDRestartOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseClusterCreate `json:"body,omitempty"`
}

// NewPostClustersIDRestartOK creates PostClustersIDRestartOK with default headers values
func NewPostClustersIDRestartOK() *PostClustersIDRestartOK {

	return &PostClustersIDRestartOK{}
}

// WithPayload adds the payload to the post clusters Id restart o k response
func (o *PostClustersIDRestartOK) WithPayload(payload *models.ResponseClusterCreate) *PostClustersIDRestartOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id restart o k response
func (o *PostClustersIDRestartOK) SetPayload(payload *models.ResponseClusterCreate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDRestartOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDRestartBadRequestCode is the HTTP code returned for type PostClustersIDRestartBadRequest
const PostClustersIDRestartBadRequestCode int = 400

/*
PostClustersIDRestartBadRequest Error

swagger:response postClustersIdRestartBadRequest
*/
type PostClustersIDRestartBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDRestartBadRequest creates PostClustersIDRestartBadRequest with default headers values
func NewPostClustersIDRestartBadRequest() *PostClustersIDRestartBadRequest {

	return &PostClustersIDRestartBadRequest{}
}

// WithPayload adds the payload to the post clusters Id restart bad request response
func (o *PostClustersIDRestartBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDRestartBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id restart bad request response
func (o *PostClustersIDRestartBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDRestartBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

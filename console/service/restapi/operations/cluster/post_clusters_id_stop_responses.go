// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDStopOKCode is the HTTP code returned for type PostClustersIDStopOK
const PostClustersIDStopOKCode int = 200

/*
PostClustersIDStopOK OK

swagger:response postClustersIdStopOK
*/
type PostClustersIDStopOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseClusterCreate `json:"body,omitempty"`
}

// NewPostClustersIDStopOK creates PostClustersIDStopOK with default headers values
func NewPostClustersIDStopOK() *PostClustersIDStopOK {

	return &PostClustersIDStopOK{}
}

// WithPayload adds the payload to the post clusters Id stop o k response
func (o *PostClustersIDStopOK) WithPayload(payload *models.ResponseClusterCreate) *PostClustersIDStopOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id stop o k response
func (o *PostClustersIDStopOK) SetPayload(payload *models.ResponseClusterCreate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDStopOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDStopBadRequestCode is the HTTP code returned for type PostClustersIDStopBadRequest
const PostClustersIDStopBadRequestCode int = 400

/*
PostClustersIDStopBadRequest Error

swagger:response postClustersIdStopBadRequest
*/
type PostClustersIDStopBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDStopBadRequest creates PostClustersIDStopBadRequest with default headers values
func NewPostClustersIDStopBadRequest() *PostClustersIDStopBadRequest {

	return &PostClustersIDStopBadRequest{}
}

// WithPayload adds the payload to the post clusters Id stop bad request response
func (o *PostClustersIDStopBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDStopBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id stop bad request response
func (o *PostClustersIDStopBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDStopBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

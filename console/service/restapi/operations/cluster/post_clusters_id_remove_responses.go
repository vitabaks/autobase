// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDRemoveNoContentCode is the HTTP code returned for type PostClustersIDRemoveNoContent
const PostClustersIDRemoveNoContentCode int = 204

/*
PostClustersIDRemoveNoContent OK

swagger:response postClustersIdRemoveNoContent
*/
type PostClustersIDRemoveNoContent struct {
}

// NewPostClustersIDRemoveNoContent creates PostClustersIDRemoveNoContent with default headers values
func NewPostClustersIDRemoveNoContent() *PostClustersIDRemoveNoContent {

	return &PostClustersIDRemoveNoContent{}
}

// WriteResponse to the client
func (o *PostClustersIDRemoveNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// PostClustersIDRemoveBadRequestCode is the HTTP code returned for type PostClustersIDRemoveBadRequest
const PostClustersIDRemoveBadRequestCode int = 400

/*
PostClustersIDRemoveBadRequest Error

swagger:response postClustersIdRemoveBadRequest
*/
type PostClustersIDRemoveBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDRemoveBadRequest creates PostClustersIDRemoveBadRequest with default headers values
func NewPostClustersIDRemoveBadRequest() *PostClustersIDRemoveBadRequest {

	return &PostClustersIDRemoveBadRequest{}
}

// WithPayload adds the payload to the post clusters Id remove bad request response
func (o *PostClustersIDRemoveBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDRemoveBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id remove bad request response
func (o *PostClustersIDRemoveBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDRemoveBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

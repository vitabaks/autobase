// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	"postgresql-cluster-console/models"
)

// DeleteServersIDNoContentCode is the HTTP code returned for type DeleteServersIDNoContent
const DeleteServersIDNoContentCode int = 204

/*
DeleteServersIDNoContent OK

swagger:response deleteServersIdNoContent
*/
type DeleteServersIDNoContent struct {
	/*

	 */
	XClusterID int64 `json:"x-cluster-id"`
}

// NewDeleteServersIDNoContent creates DeleteServersIDNoContent with default headers values
func NewDeleteServersIDNoContent() *DeleteServersIDNoContent {

	return &DeleteServersIDNoContent{}
}

// WithXClusterID adds the xClusterId to the delete servers Id no content response
func (o *DeleteServersIDNoContent) WithXClusterID(xClusterID int64) *DeleteServersIDNoContent {
	o.XClusterID = xClusterID
	return o
}

// SetXClusterID sets the xClusterId to the delete servers Id no content response
func (o *DeleteServersIDNoContent) SetXClusterID(xClusterID int64) {
	o.XClusterID = xClusterID
}

// WriteResponse to the client
func (o *DeleteServersIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header x-cluster-id

	xClusterID := swag.FormatInt64(o.XClusterID)
	if xClusterID != "" {
		rw.Header().Set("x-cluster-id", xClusterID)
	}

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteServersIDBadRequestCode is the HTTP code returned for type DeleteServersIDBadRequest
const DeleteServersIDBadRequestCode int = 400

/*
DeleteServersIDBadRequest Error

swagger:response deleteServersIdBadRequest
*/
type DeleteServersIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewDeleteServersIDBadRequest creates DeleteServersIDBadRequest with default headers values
func NewDeleteServersIDBadRequest() *DeleteServersIDBadRequest {

	return &DeleteServersIDBadRequest{}
}

// WithPayload adds the payload to the delete servers Id bad request response
func (o *DeleteServersIDBadRequest) WithPayload(payload *models.ResponseError) *DeleteServersIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete servers Id bad request response
func (o *DeleteServersIDBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteServersIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

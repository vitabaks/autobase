// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDStartOKCode is the HTTP code returned for type PostClustersIDStartOK
const PostClustersIDStartOKCode int = 200

/*
PostClustersIDStartOK OK

swagger:response postClustersIdStartOK
*/
type PostClustersIDStartOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseClusterCreate `json:"body,omitempty"`
}

// NewPostClustersIDStartOK creates PostClustersIDStartOK with default headers values
func NewPostClustersIDStartOK() *PostClustersIDStartOK {

	return &PostClustersIDStartOK{}
}

// WithPayload adds the payload to the post clusters Id start o k response
func (o *PostClustersIDStartOK) WithPayload(payload *models.ResponseClusterCreate) *PostClustersIDStartOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id start o k response
func (o *PostClustersIDStartOK) SetPayload(payload *models.ResponseClusterCreate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDStartOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDStartBadRequestCode is the HTTP code returned for type PostClustersIDStartBadRequest
const PostClustersIDStartBadRequestCode int = 400

/*
PostClustersIDStartBadRequest Error

swagger:response postClustersIdStartBadRequest
*/
type PostClustersIDStartBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDStartBadRequest creates PostClustersIDStartBadRequest with default headers values
func NewPostClustersIDStartBadRequest() *PostClustersIDStartBadRequest {

	return &PostClustersIDStartBadRequest{}
}

// WithPayload adds the payload to the post clusters Id start bad request response
func (o *PostClustersIDStartBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDStartBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id start bad request response
func (o *PostClustersIDStartBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDStartBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

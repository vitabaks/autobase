// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDRefreshOKCode is the HTTP code returned for type PostClustersIDRefreshOK
const PostClustersIDRefreshOKCode int = 200

/*
PostClustersIDRefreshOK OK

swagger:response postClustersIdRefreshOK
*/
type PostClustersIDRefreshOK struct {

	/*
	  In: Body
	*/
	Payload *models.ClusterInfo `json:"body,omitempty"`
}

// NewPostClustersIDRefreshOK creates PostClustersIDRefreshOK with default headers values
func NewPostClustersIDRefreshOK() *PostClustersIDRefreshOK {

	return &PostClustersIDRefreshOK{}
}

// WithPayload adds the payload to the post clusters Id refresh o k response
func (o *PostClustersIDRefreshOK) WithPayload(payload *models.ClusterInfo) *PostClustersIDRefreshOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id refresh o k response
func (o *PostClustersIDRefreshOK) SetPayload(payload *models.ClusterInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDRefreshOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDRefreshBadRequestCode is the HTTP code returned for type PostClustersIDRefreshBadRequest
const PostClustersIDRefreshBadRequestCode int = 400

/*
PostClustersIDRefreshBadRequest Error

swagger:response postClustersIdRefreshBadRequest
*/
type PostClustersIDRefreshBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDRefreshBadRequest creates PostClustersIDRefreshBadRequest with default headers values
func NewPostClustersIDRefreshBadRequest() *PostClustersIDRefreshBadRequest {

	return &PostClustersIDRefreshBadRequest{}
}

// WithPayload adds the payload to the post clusters Id refresh bad request response
func (o *PostClustersIDRefreshBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDRefreshBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id refresh bad request response
func (o *PostClustersIDRefreshBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDRefreshBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

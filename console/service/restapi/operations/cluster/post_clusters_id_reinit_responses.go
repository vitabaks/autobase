// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDReinitOKCode is the HTTP code returned for type PostClustersIDReinitOK
const PostClustersIDReinitOKCode int = 200

/*
PostClustersIDReinitOK OK

swagger:response postClustersIdReinitOK
*/
type PostClustersIDReinitOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseClusterCreate `json:"body,omitempty"`
}

// NewPostClustersIDReinitOK creates PostClustersIDReinitOK with default headers values
func NewPostClustersIDReinitOK() *PostClustersIDReinitOK {

	return &PostClustersIDReinitOK{}
}

// WithPayload adds the payload to the post clusters Id reinit o k response
func (o *PostClustersIDReinitOK) WithPayload(payload *models.ResponseClusterCreate) *PostClustersIDReinitOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id reinit o k response
func (o *PostClustersIDReinitOK) SetPayload(payload *models.ResponseClusterCreate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDReinitOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDReinitBadRequestCode is the HTTP code returned for type PostClustersIDReinitBadRequest
const PostClustersIDReinitBadRequestCode int = 400

/*
PostClustersIDReinitBadRequest Error

swagger:response postClustersIdReinitBadRequest
*/
type PostClustersIDReinitBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDReinitBadRequest creates PostClustersIDReinitBadRequest with default headers values
func NewPostClustersIDReinitBadRequest() *PostClustersIDReinitBadRequest {

	return &PostClustersIDReinitBadRequest{}
}

// WithPayload adds the payload to the post clusters Id reinit bad request response
func (o *PostClustersIDReinitBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDReinitBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id reinit bad request response
func (o *PostClustersIDReinitBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDReinitBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

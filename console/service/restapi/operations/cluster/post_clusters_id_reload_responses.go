// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// PostClustersIDReloadOKCode is the HTTP code returned for type PostClustersIDReloadOK
const PostClustersIDReloadOKCode int = 200

/*
PostClustersIDReloadOK OK

swagger:response postClustersIdReloadOK
*/
type PostClustersIDReloadOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseClusterCreate `json:"body,omitempty"`
}

// NewPostClustersIDReloadOK creates PostClustersIDReloadOK with default headers values
func NewPostClustersIDReloadOK() *PostClustersIDReloadOK {

	return &PostClustersIDReloadOK{}
}

// WithPayload adds the payload to the post clusters Id reload o k response
func (o *PostClustersIDReloadOK) WithPayload(payload *models.ResponseClusterCreate) *PostClustersIDReloadOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id reload o k response
func (o *PostClustersIDReloadOK) SetPayload(payload *models.ResponseClusterCreate) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDReloadOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostClustersIDReloadBadRequestCode is the HTTP code returned for type PostClustersIDReloadBadRequest
const PostClustersIDReloadBadRequestCode int = 400

/*
PostClustersIDReloadBadRequest Error

swagger:response postClustersIdReloadBadRequest
*/
type PostClustersIDReloadBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewPostClustersIDReloadBadRequest creates PostClustersIDReloadBadRequest with default headers values
func NewPostClustersIDReloadBadRequest() *PostClustersIDReloadBadRequest {

	return &PostClustersIDReloadBadRequest{}
}

// WithPayload adds the payload to the post clusters Id reload bad request response
func (o *PostClustersIDReloadBadRequest) WithPayload(payload *models.ResponseError) *PostClustersIDReloadBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post clusters Id reload bad request response
func (o *PostClustersIDReloadBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostClustersIDReloadBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

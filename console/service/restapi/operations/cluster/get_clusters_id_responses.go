// Code generated by go-swagger; DO NOT EDIT.

package cluster

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// GetClustersIDOKCode is the HTTP code returned for type GetClustersIDOK
const GetClustersIDOKCode int = 200

/*
GetClustersIDOK OK

swagger:response getClustersIdOK
*/
type GetClustersIDOK struct {

	/*
	  In: Body
	*/
	Payload *models.ClusterInfo `json:"body,omitempty"`
}

// NewGetClustersIDOK creates GetClustersIDOK with default headers values
func NewGetClustersIDOK() *GetClustersIDOK {

	return &GetClustersIDOK{}
}

// WithPayload adds the payload to the get clusters Id o k response
func (o *GetClustersIDOK) WithPayload(payload *models.ClusterInfo) *GetClustersIDOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters Id o k response
func (o *GetClustersIDOK) SetPayload(payload *models.ClusterInfo) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersIDOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetClustersIDBadRequestCode is the HTTP code returned for type GetClustersIDBadRequest
const GetClustersIDBadRequestCode int = 400

/*
GetClustersIDBadRequest Error

swagger:response getClustersIdBadRequest
*/
type GetClustersIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewGetClustersIDBadRequest creates GetClustersIDBadRequest with default headers values
func NewGetClustersIDBadRequest() *GetClustersIDBadRequest {

	return &GetClustersIDBadRequest{}
}

// WithPayload adds the payload to the get clusters Id bad request response
func (o *GetClustersIDBadRequest) WithPayload(payload *models.ResponseError) *GetClustersIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get clusters Id bad request response
func (o *GetClustersIDBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetClustersIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// Code generated by go-swagger; DO NOT EDIT.

package dictionary

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// GetDatabaseExtensionsOKCode is the HTTP code returned for type GetDatabaseExtensionsOK
const GetDatabaseExtensionsOKCode int = 200

/*
GetDatabaseExtensionsOK OK

swagger:response getDatabaseExtensionsOK
*/
type GetDatabaseExtensionsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseDatabaseExtensions `json:"body,omitempty"`
}

// NewGetDatabaseExtensionsOK creates GetDatabaseExtensionsOK with default headers values
func NewGetDatabaseExtensionsOK() *GetDatabaseExtensionsOK {

	return &GetDatabaseExtensionsOK{}
}

// WithPayload adds the payload to the get database extensions o k response
func (o *GetDatabaseExtensionsOK) WithPayload(payload *models.ResponseDatabaseExtensions) *GetDatabaseExtensionsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get database extensions o k response
func (o *GetDatabaseExtensionsOK) SetPayload(payload *models.ResponseDatabaseExtensions) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDatabaseExtensionsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetDatabaseExtensionsBadRequestCode is the HTTP code returned for type GetDatabaseExtensionsBadRequest
const GetDatabaseExtensionsBadRequestCode int = 400

/*
GetDatabaseExtensionsBadRequest Error

swagger:response getDatabaseExtensionsBadRequest
*/
type GetDatabaseExtensionsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewGetDatabaseExtensionsBadRequest creates GetDatabaseExtensionsBadRequest with default headers values
func NewGetDatabaseExtensionsBadRequest() *GetDatabaseExtensionsBadRequest {

	return &GetDatabaseExtensionsBadRequest{}
}

// WithPayload adds the payload to the get database extensions bad request response
func (o *GetDatabaseExtensionsBadRequest) WithPayload(payload *models.ResponseError) *GetDatabaseExtensionsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get database extensions bad request response
func (o *GetDatabaseExtensionsBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetDatabaseExtensionsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

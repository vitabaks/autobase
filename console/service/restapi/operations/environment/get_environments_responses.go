// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// GetEnvironmentsOKCode is the HTTP code returned for type GetEnvironmentsOK
const GetEnvironmentsOKCode int = 200

/*
GetEnvironmentsOK OK

swagger:response getEnvironmentsOK
*/
type GetEnvironmentsOK struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseEnvironmentsList `json:"body,omitempty"`
}

// NewGetEnvironmentsOK creates GetEnvironmentsOK with default headers values
func NewGetEnvironmentsOK() *GetEnvironmentsOK {

	return &GetEnvironmentsOK{}
}

// WithPayload adds the payload to the get environments o k response
func (o *GetEnvironmentsOK) WithPayload(payload *models.ResponseEnvironmentsList) *GetEnvironmentsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get environments o k response
func (o *GetEnvironmentsOK) SetPayload(payload *models.ResponseEnvironmentsList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEnvironmentsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetEnvironmentsBadRequestCode is the HTTP code returned for type GetEnvironmentsBadRequest
const GetEnvironmentsBadRequestCode int = 400

/*
GetEnvironmentsBadRequest Error

swagger:response getEnvironmentsBadRequest
*/
type GetEnvironmentsBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewGetEnvironmentsBadRequest creates GetEnvironmentsBadRequest with default headers values
func NewGetEnvironmentsBadRequest() *GetEnvironmentsBadRequest {

	return &GetEnvironmentsBadRequest{}
}

// WithPayload adds the payload to the get environments bad request response
func (o *GetEnvironmentsBadRequest) WithPayload(payload *models.ResponseError) *GetEnvironmentsBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get environments bad request response
func (o *GetEnvironmentsBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetEnvironmentsBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

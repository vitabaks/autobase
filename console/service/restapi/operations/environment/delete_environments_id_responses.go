// Code generated by go-swagger; DO NOT EDIT.

package environment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"postgresql-cluster-console/models"
)

// DeleteEnvironmentsIDNoContentCode is the HTTP code returned for type DeleteEnvironmentsIDNoContent
const DeleteEnvironmentsIDNoContentCode int = 204

/*
DeleteEnvironmentsIDNoContent OK

swagger:response deleteEnvironmentsIdNoContent
*/
type DeleteEnvironmentsIDNoContent struct {
}

// NewDeleteEnvironmentsIDNoContent creates DeleteEnvironmentsIDNoContent with default headers values
func NewDeleteEnvironmentsIDNoContent() *DeleteEnvironmentsIDNoContent {

	return &DeleteEnvironmentsIDNoContent{}
}

// WriteResponse to the client
func (o *DeleteEnvironmentsIDNoContent) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(204)
}

// DeleteEnvironmentsIDBadRequestCode is the HTTP code returned for type DeleteEnvironmentsIDBadRequest
const DeleteEnvironmentsIDBadRequestCode int = 400

/*
DeleteEnvironmentsIDBadRequest Error

swagger:response deleteEnvironmentsIdBadRequest
*/
type DeleteEnvironmentsIDBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ResponseError `json:"body,omitempty"`
}

// NewDeleteEnvironmentsIDBadRequest creates DeleteEnvironmentsIDBadRequest with default headers values
func NewDeleteEnvironmentsIDBadRequest() *DeleteEnvironmentsIDBadRequest {

	return &DeleteEnvironmentsIDBadRequest{}
}

// WithPayload adds the payload to the delete environments Id bad request response
func (o *DeleteEnvironmentsIDBadRequest) WithPayload(payload *models.ResponseError) *DeleteEnvironmentsIDBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete environments Id bad request response
func (o *DeleteEnvironmentsIDBadRequest) SetPayload(payload *models.ResponseError) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteEnvironmentsIDBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

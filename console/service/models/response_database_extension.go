// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// ResponseDatabaseExtension Info about database extension
//
// swagger:model Response.DatabaseExtension
type ResponseDatabaseExtension struct {

	// contrib
	// Example: false
	Contrib bool `json:"contrib,omitempty"`

	// description
	// Example: Citus is PostgreSQL extension that transforms...
	Description *string `json:"description,omitempty"`

	// image
	// Example: citus.png
	Image *string `json:"image,omitempty"`

	// name
	// Example: Citus
	Name string `json:"name,omitempty"`

	// postgres max version
	// Example: 16
	PostgresMaxVersion *string `json:"postgres_max_version,omitempty"`

	// postgres min version
	// Example: 11
	PostgresMinVersion *string `json:"postgres_min_version,omitempty"`

	// url
	// Example: https://github.com/citusdata/citus
	URL *string `json:"url,omitempty"`
}

// Validate validates this response database extension
func (m *ResponseDatabaseExtension) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this response database extension based on context it is used
func (m *ResponseDatabaseExtension) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *ResponseDatabaseExtension) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *ResponseDatabaseExtension) UnmarshalBinary(b []byte) error {
	var res ResponseDatabaseExtension
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}

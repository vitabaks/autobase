# nginx.conf
worker_processes  auto;

# Allow Nginx to access environment variables
env PG_CONSOLE_API_HOST;
env PG_CONSOLE_API_PORT;

events {
  worker_connections 8000;
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # Read env vars via $env_* and provide safe fallbacks
  map $env_PG_CONSOLE_API_HOST $api_host {
    ""       127.0.0.1;     # fallback if env is absent
    default  $env_PG_CONSOLE_API_HOST;
  }
  map $env_PG_CONSOLE_API_PORT $api_port {
    ""       8080;          # fallback if env is absent
    default  $env_PG_CONSOLE_API_PORT;
  }

  server {
    listen 80;
    access_log /var/log/nginx/access.log;

    # Edge-managed CORS (works for UI and proxied API)
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Vary Origin always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PATCH, DELETE, PUT" always;
    add_header Access-Control-Allow-Headers "Authorization, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, X-Auth-Token" always;
    add_header Access-Control-Expose-Headers "X-Log-Completed, X-Cluster-Id" always;

    # SPA root
    root  /usr/share/nginx/html;
    index index.html index.htm;

    # API proxy
    location /api/ {
      # Preflight fast-path
      if ($request_method = OPTIONS) {
        add_header Access-Control-Max-Age 86400 always;
        return 204;
      }

      # Required for variables in proxy_pass (Docker DNS)
      resolver 127.0.0.11 ipv6=off;

      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection        "";
      proxy_set_header X-CORS            by-nginx;   # marker for backend

      proxy_pass http://$api_host:$api_port;
    }

    # SPA routing
    location / {
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
      etag off;
      if_modified_since off;
    }

    # Static assets: 1 day cache (no immutable unless filenames are hashed)
    location ~* \.(?:css|js)$ {
      try_files $uri =404;
      access_log off;
      expires 1d;
      add_header Cache-Control "public, max-age=86400";
    }

    # Other files with extension must exist
    location ~ ^.+\..+$ {
      try_files $uri =404;
    }
  }
}

# nginx.conf
worker_processes  auto;

# Allow Nginx to access this environment variable
env PG_CONSOLE_API_HOST;

events {
  worker_connections 8000;
  multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;

  # Map environment variable to $api_host with fallback to localhost
  map $PG_CONSOLE_API_HOST $api_host {
    ""       127.0.0.1;
    default  $PG_CONSOLE_API_HOST;
  }

  server {
    listen 80;
    access_log /var/log/nginx/access.log;

    # --- Global CORS headers (edge-managed CORS) ---
    add_header Access-Control-Allow-Origin $http_origin always;
    add_header Vary Origin always;
    add_header Access-Control-Allow-Credentials true always;
    add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, PATCH, DELETE, PUT" always;
    add_header Access-Control-Allow-Headers "Authorization, Access-Control-Allow-Origin, Access-Control-Allow-Headers, Origin,Accept, X-Requested-With, Content-Type, Access-Control-Request-Method, Access-Control-Request-Headers, X-Auth-Token" always;
    add_header Access-Control-Expose-Headers "X-Log-Completed, X-Cluster-Id" always;

    # Root directory for SPA
    root  /usr/share/nginx/html;
    index index.html index.htm;

    # -------- API proxy --------
    location /api/ {
      # Handle preflight requests directly without hitting the backend
      if ($request_method = OPTIONS) {
        add_header Access-Control-Max-Age 86400 always;
        return 204;
      }

      # DNS resolver is required when using variables in proxy_pass (Docker default DNS: 127.0.0.11)
      resolver 127.0.0.11 ipv6=off;

      proxy_http_version 1.1;
      proxy_set_header Host              $host;        # Forward original Host header
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_set_header Connection        "";           # Proper keep-alive for HTTP/1.1

      # Marker so backend knows CORS is handled by nginx
      proxy_set_header X-CORS by-nginx;

      # Uncomment for SSE/WebSocket support
      # proxy_set_header Upgrade $http_upgrade;
      # proxy_set_header Connection "upgrade";
      # proxy_read_timeout 3600;

      proxy_pass http://$api_host:8080;
    }

    # -------- SPA routing --------
    location / {
      try_files $uri $uri/ /index.html;
      # Prevent caching of the main HTML file so users always get the latest build
      add_header Cache-Control "no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0";
      expires off;
      etag off;
      if_modified_since off;
    }

    # -------- Static assets: 1-day cache (no immutable if filenames are not hashed) --------
    location ~* \.(?:css|js)$ {
      try_files $uri =404;
      access_log off;
      expires 1d;
      add_header Cache-Control "public, max-age=86400";
    }

    # Other files with an extension must exist or return 404
    location ~ ^.+\..+$ {
      try_files $uri =404;
    }
  }
}
